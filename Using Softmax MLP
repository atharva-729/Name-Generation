{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1098288,"sourceType":"datasetVersion","datasetId":613951}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-04T09:53:24.594988Z","iopub.execute_input":"2024-07-04T09:53:24.595424Z","iopub.status.idle":"2024-07-04T09:53:24.604752Z","shell.execute_reply.started":"2024-07-04T09:53:24.595390Z","shell.execute_reply":"2024-07-04T09:53:24.603316Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"/kaggle/input/indian-names-boys-girls/Names.txt\n","output_type":"stream"}]},{"cell_type":"code","source":"import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:25.074252Z","iopub.execute_input":"2024-07-04T09:53:25.074826Z","iopub.status.idle":"2024-07-04T09:53:25.081578Z","shell.execute_reply.started":"2024-07-04T09:53:25.074777Z","shell.execute_reply":"2024-07-04T09:53:25.079940Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"words = open('/kaggle/input/indian-names-boys-girls/Names.txt', 'r').read().splitlines()\nwords[:8]","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:25.553890Z","iopub.execute_input":"2024-07-04T09:53:25.554343Z","iopub.status.idle":"2024-07-04T09:53:25.570549Z","shell.execute_reply.started":"2024-07-04T09:53:25.554306Z","shell.execute_reply":"2024-07-04T09:53:25.569061Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"['Aaban',\n 'Aabharan',\n 'Aabhas',\n 'Aabhat',\n 'Aabheer',\n 'Aabheer',\n 'Abheer',\n 'Aabher']"},"metadata":{}}]},{"cell_type":"code","source":"words = [w.lower() for w in words]","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:26.073701Z","iopub.execute_input":"2024-07-04T09:53:26.074127Z","iopub.status.idle":"2024-07-04T09:53:26.087816Z","shell.execute_reply.started":"2024-07-04T09:53:26.074095Z","shell.execute_reply":"2024-07-04T09:53:26.086600Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"# vocab and encoding\nchars = sorted(list(set(''.join(words))))\nstoi = {s:i for i,s in enumerate(chars)}\nitos = {i:s for s,i in stoi.items()}\nprint(itos)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:30.033830Z","iopub.execute_input":"2024-07-04T09:53:30.034222Z","iopub.status.idle":"2024-07-04T09:53:30.051189Z","shell.execute_reply.started":"2024-07-04T09:53:30.034192Z","shell.execute_reply":"2024-07-04T09:53:30.049783Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"{0: ' ', 1: '-', 2: '.', 3: 'a', 4: 'b', 5: 'c', 6: 'd', 7: 'e', 8: 'f', 9: 'g', 10: 'h', 11: 'i', 12: 'j', 13: 'k', 14: 'l', 15: 'm', 16: 'n', 17: 'o', 18: 'p', 19: 'q', 20: 'r', 21: 's', 22: 't', 23: 'u', 24: 'v', 25: 'w', 26: 'x', 27: 'y', 28: 'z'}\n","output_type":"stream"}]},{"cell_type":"code","source":"# build the dataset\n\nblock_size = 3 # context length: how many characters do we take to predict the next one?\nX, Y = [], []\nfor w in words:\n    context = [2] * block_size\n    for ch in w + '.':\n        ix = stoi[ch]\n        X.append(context)\n        Y.append(ix)\n#         print(''.join(itos[i] for i in context), '--->', itos[ix])\n        context = context[1:] + [ix] # crop and append\n\nX = torch.tensor(X)\nY = torch.tensor(Y)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:54:56.513962Z","iopub.execute_input":"2024-07-04T09:54:56.514461Z","iopub.status.idle":"2024-07-04T09:54:58.656514Z","shell.execute_reply.started":"2024-07-04T09:54:56.514419Z","shell.execute_reply":"2024-07-04T09:54:58.655492Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"\nX.shape, X.dtype, Y.shape, Y.dtype","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:55:21.801065Z","iopub.execute_input":"2024-07-04T09:55:21.801503Z","iopub.status.idle":"2024-07-04T09:55:21.810122Z","shell.execute_reply.started":"2024-07-04T09:55:21.801471Z","shell.execute_reply":"2024-07-04T09:55:21.808789Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"(torch.Size([506379, 3]), torch.int64, torch.Size([506379]), torch.int64)"},"metadata":{}}]},{"cell_type":"code","source":"# build train and dev sets\nblock_size = 3 # context length: how many characters do we take to predict the next one?\n\ndef build_dataset(words):  \n    X, Y = [], []\n    for w in words:\n\n    #print(w)\n        context = [2] * block_size\n        for ch in w + '.':\n            ix = stoi[ch]\n            X.append(context)\n            Y.append(ix)\n            #print(''.join(itos[i] for i in context), '--->', itos[ix])\n            context = context[1:] + [ix] # crop and append\n\n    X = torch.tensor(X)\n    Y = torch.tensor(Y)\n    print(X.shape, Y.shape)\n    return X, Y\n\nimport random\nrandom.seed(42)\nrandom.shuffle(words)\nn1 = int(0.8*len(words))\nn2 = int(0.9*len(words))\n\nXtr, Ytr = build_dataset(words[:n1])\nXdev, Ydev = build_dataset(words[n1:n2])\nXte, Yte = build_dataset(words[n2:])","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:57:41.310844Z","iopub.execute_input":"2024-07-04T09:57:41.311295Z","iopub.status.idle":"2024-07-04T09:57:43.220635Z","shell.execute_reply.started":"2024-07-04T09:57:41.311261Z","shell.execute_reply":"2024-07-04T09:57:43.219340Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"torch.Size([405025, 3]) torch.Size([405025])\ntorch.Size([50669, 3]) torch.Size([50669])\ntorch.Size([50685, 3]) torch.Size([50685])\n","output_type":"stream"}]},{"cell_type":"code","source":"g = torch.Generator().manual_seed(69)\nC = torch.randn((29, 10), generator=g)\nW1 = torch.randn((30, 200), generator=g)\nb1 = torch.randn(200, generator=g)\nW2 = torch.randn((200, 29), generator=g)\nb2 = torch.randn(29, generator=g)\nparameters = [C, W1, b1, W2, b2]","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:01:39.440331Z","iopub.execute_input":"2024-07-04T10:01:39.440784Z","iopub.status.idle":"2024-07-04T10:01:39.450225Z","shell.execute_reply.started":"2024-07-04T10:01:39.440753Z","shell.execute_reply":"2024-07-04T10:01:39.448878Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"for p in parameters:\n    p.requires_grad = True\nlre = torch.linspace(-3, 0, 1000)\nlrs = 10**lre","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:02:09.514081Z","iopub.execute_input":"2024-07-04T10:02:09.514515Z","iopub.status.idle":"2024-07-04T10:02:09.526073Z","shell.execute_reply.started":"2024-07-04T10:02:09.514475Z","shell.execute_reply":"2024-07-04T10:02:09.524417Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"lri = []\nlossi = []\nstepi = []","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:02:16.753250Z","iopub.execute_input":"2024-07-04T10:02:16.753633Z","iopub.status.idle":"2024-07-04T10:02:16.759427Z","shell.execute_reply.started":"2024-07-04T10:02:16.753604Z","shell.execute_reply":"2024-07-04T10:02:16.758274Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"lri = []\nlossi = []\nstepi = []\nfor i in range(200000):\n  \n    # minibatch construct\n    ix = torch.randint(0, Xtr.shape[0], (32,))\n\n    # forward pass\n    emb = C[Xtr[ix]] # (32, 3, 10)\n    h = torch.tanh(emb.view(-1, 30) @ W1 + b1) # (32, 200)\n    logits = h @ W2 + b2 # (32, 27)\n    loss = F.cross_entropy(logits, Ytr[ix])\n    #print(loss.item())\n\n    # backward pass\n    for p in parameters:\n        p.grad = None\n    loss.backward()\n\n    # update\n    #lr = lrs[i]\n    lr = 0.1 if i < 100000 else 0.01\n    for p in parameters:\n        p.data += -lr * p.grad\n\n    # track stats\n    #lri.append(lre[i])\n    stepi.append(i)\n    lossi.append(loss.log10().item())\n\n#print(loss.item())","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:03:22.194215Z","iopub.execute_input":"2024-07-04T10:03:22.194708Z","iopub.status.idle":"2024-07-04T10:05:27.168096Z","shell.execute_reply.started":"2024-07-04T10:03:22.194671Z","shell.execute_reply":"2024-07-04T10:05:27.166840Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"plt.plot(stepi, lossi)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:05:27.170709Z","iopub.execute_input":"2024-07-04T10:05:27.171451Z","iopub.status.idle":"2024-07-04T10:05:27.829438Z","shell.execute_reply.started":"2024-07-04T10:05:27.171403Z","shell.execute_reply":"2024-07-04T10:05:27.828094Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7e430a98b250>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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UOKePXuKAwcOiD179oj27dtrDEPNzs4WPj4+4umnnxYnT54Ua9euFa6urlrDNB0cHMTChQvF6dOnxZw5cySHaRqqiynXV1xcLB588EHRsmVLkZSUpPE3WTnCYd++fWLJkiUiKSlJXLhwQXz33XeiefPmYsKECbK4PkPXmJeXJ958802RkJAgLl26JLZt2yZ69eol2rdvLwoLC+v9e1gpJydHuLq6is8++0xrf7m/h4buC0LI67PTUF2MYbPBiRBCfPzxxyIwMFA4OTmJPn36iP3791u7SgKA5GPVqlVCCCFSU1PFwIEDhaenp1AqlaJdu3birbfe0pgnQwghUlJSRFRUlHBxcRFeXl7ijTfeECUlJRplduzYIXr06CGcnJxEmzZtVOdQZ+mf0dixY4Wfn59wcnISLVq0EGPHjhXnz59XvX737l3x0ksviaZNmwpXV1fx8MMPi+vXr9eLa1O3ZcsWAUAkJydrbK+P79+OHTskfycnTpwohKgYHjlr1izh4+MjlEqlGDp0qNZ137p1S4wbN040btxYuLm5iejoaJGXl6dR5tixY6J///5CqVSKFi1aiAULFmjV5ccffxQdOnQQTk5OokuXLmLjxo0arxtTF1Ou79KlSzr/JivnrUlMTBRhYWHC3d1dODs7i06dOon58+dr3NiteX2GrrGgoEAMHz5cNG/eXDg6OopWrVqJyZMnawWx9fU9rPT5558LFxcXkZ2drbW/3N9DQ/cFIeT12WlMXQxR3LtwIiIiIlmwyZwTIiIiki8GJ0RERCQrDE6IiIhIVhicEBERkawwOCEiIiJZYXBCREREssLghIiIiGSFwQkRERHJCoMTIiIikhUGJ0RERCQrDE6IiIhIVhicEBERkaz8Pwso0zh52V4FAAAAAElFTkSuQmCC"},"metadata":{}}]},{"cell_type":"code","source":"emb = C[Xtr] # (32, 3, 2)\nh = torch.tanh(emb.view(-1, 30) @ W1 + b1) # (32, 100)\nlogits = h @ W2 + b2 # (32, 27)\nloss = F.cross_entropy(logits, Ytr)\nloss","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:05:27.831184Z","iopub.execute_input":"2024-07-04T10:05:27.831597Z","iopub.status.idle":"2024-07-04T10:05:28.753202Z","shell.execute_reply.started":"2024-07-04T10:05:27.831562Z","shell.execute_reply":"2024-07-04T10:05:28.752013Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"tensor(1.9554, grad_fn=<NllLossBackward0>)"},"metadata":{}}]},{"cell_type":"code","source":"emb = C[Xdev] # (32, 3, 2)\nh = torch.tanh(emb.view(-1, 30) @ W1 + b1) # (32, 100)\nlogits = h @ W2 + b2 # (32, 27)\nloss = F.cross_entropy(logits, Ydev)\nloss","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:05:28.756140Z","iopub.execute_input":"2024-07-04T10:05:28.756863Z","iopub.status.idle":"2024-07-04T10:05:28.865405Z","shell.execute_reply.started":"2024-07-04T10:05:28.756815Z","shell.execute_reply":"2024-07-04T10:05:28.863826Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"tensor(1.9705, grad_fn=<NllLossBackward0>)"},"metadata":{}}]},{"cell_type":"code","source":"plt.figure(figsize=(8,8))\nplt.scatter(C[:,0].data, C[:,1].data, s=200)\nfor i in range(C.shape[0]):\n    plt.text(C[i,0].item(), C[i,1].item(), itos[i], ha=\"center\", va=\"center\", color='white')\nplt.grid('minor')","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:05:28.866973Z","iopub.execute_input":"2024-07-04T10:05:28.867362Z","iopub.status.idle":"2024-07-04T10:05:29.281657Z","shell.execute_reply.started":"2024-07-04T10:05:28.867327Z","shell.execute_reply":"2024-07-04T10:05:29.280382Z"},"trusted":true},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x800 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"context = [2] * block_size\nC[torch.tensor([context])].shape","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:05:29.283505Z","iopub.execute_input":"2024-07-04T10:05:29.284017Z","iopub.status.idle":"2024-07-04T10:05:29.293705Z","shell.execute_reply.started":"2024-07-04T10:05:29.283971Z","shell.execute_reply":"2024-07-04T10:05:29.292529Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"torch.Size([1, 3, 10])"},"metadata":{}}]},{"cell_type":"code","source":"g = torch.Generator().manual_seed(420)\n\nfor _ in range(20):\n    \n    out = []\n    context = [2] * block_size # initialize with all ...\n    while True:\n        emb = C[torch.tensor([context])] # (1,block_size,d)\n        h = torch.tanh(emb.view(1, -1) @ W1 + b1)\n        logits = h @ W2 + b2\n        probs = F.softmax(logits, dim=1)\n        ix = torch.multinomial(probs, num_samples=1, generator=g).item()\n        context = context[1:] + [ix]\n        out.append(ix)\n        if ix == 2:\n            break\n    \n    print(''.join(itos[i] for i in out))","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:10:58.090404Z","iopub.execute_input":"2024-07-04T10:10:58.090907Z","iopub.status.idle":"2024-07-04T10:10:58.140164Z","shell.execute_reply.started":"2024-07-04T10:10:58.090868Z","shell.execute_reply":"2024-07-04T10:10:58.138654Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"jaselan.\nraca.\nkathan.\nkayi.\nridithan.\nvaithug.\nsuthigan.\nabhaksimatswar.\nmileshika.\nhardaaranya.\naaga.\nkuramithayamanodhan.\nnalan.\npuvar.\npaban.\nrajbharsan.\nyathurtadiyaanatheerar.\navidharini.\npaviagadeva.\nsikap.\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}